<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.charge.mapper.charge.PayProjectIoMapper" >
  <resultMap id="BaseResultMap" type="com.charge.pojo.charge.PayProjectIo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pay_project_id" property="payProjectId" jdbcType="INTEGER" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="pay_time" property="payTime" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pay_project_id, pay_amount, pay_time, remark, create_time, modify_time, is_deleted
  </sql>
  <insert id="insert" parameterType="com.charge.pojo.charge.PayProjectIo" >
    insert into pay_project_io (id, pay_project_id, pay_amount, 
      pay_time, remark, create_time, 
      modify_time, is_deleted)
    values (#{id,jdbcType=INTEGER}, #{payProjectId,jdbcType=INTEGER}, #{payAmount,jdbcType=DECIMAL}, 
      #{payTime,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.charge.pojo.charge.PayProjectIo" >
    insert into pay_project_io
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payProjectId != null" >
        pay_project_id,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="deleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payProjectId != null" >
        #{payProjectId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.charge.pojo.charge.PayProjectIo" >
    update pay_project_io
    <set >
      <if test="payProjectId != null" >
        pay_project_id = #{payProjectId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        is_deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.charge.pojo.charge.PayProjectIo" >
    update pay_project_io
    set pay_project_id = #{payProjectId,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="countPayProjectIo" resultType="java.lang.Integer">
    SELECT count(a.id) FROM pay_project_io a JOIN pay_project b ON a.pay_project_id=b.id
    <include refid="wheresql"/>
  </select>
  <select id="queryPayProjectIoPageList" resultType="com.charge.pojo.charge.PayProjectIo">
    SELECT a.*,b.project_name AS payProjectName FROM pay_project_io a JOIN pay_project b ON a.pay_project_id=b.id
    <include refid="wheresql"/>
  </select>

  <sql id="wheresql">
    WHERE a.is_deleted=0
    <if test="param.projectName != null and param.projectName != ''">
      AND b.project_name=#{param.projectName}
    </if>
    <if test="param.payTimeBegin != null and param.payTimeBegin != ''">
      AND a.pay_time &gt;= UNIX_TIMESTAMP(#{param.payTimeBegin})
    </if>
    <if test="param.payTimeEnd != null and param.payTimeEnd != ''">
      AND a.pay_time &lt;= UNIX_TIMESTAMP(#{param.payTimeEnd})
    </if>
  </sql>

  <select id="getPayProjectIoById" parameterType="java.lang.Integer" resultType="com.charge.pojo.charge.PayProjectIo">
    SELECT <include refid="Base_Column_List"/> FROM pay_project_io WHERE id=#{id}
  </select>

</mapper>